추상 메소드

추상 클래스
-추상 메소드를 포함 하는 추상 클래스
    abstract class Shapte(){
    public Shape();
    abstract public void draw();
    }
-추상 메소드 없는 추상 클래스
    abstract class MyComponent{
    String name;
    public void load(String name){
    this.name = name;}
    }

추상 클래스는 객체를 생설 할 수 없다.
public class AbstractError{
...
shape = new Shape();  // 존재하지 않는다
}

추상 클래스를 쓰는 이유 -> 공통 특징을 찾아 하나로 몪어 놓는다. 예를 들어, 동물이라는 것은 특징은 있지만 실제로 존재하지 않는다.
띠리사 추상 클래스는 미완성 객체임으로 완성정이 없는 클래스이다.


일반 클래스와 추상 클래스의 차이(추상 클래스를 사용하는 이유)
추상 클래스인 경우 일반 클래스와 달리 상속 클래스에게 추상메소드를 구현하도록 의무를 부여하게 된다.
일반 클래스는 매소드를 구현하지 않아도 오류 발생시키지 않는다.

추상 클래스의 용도 
설계와 구현 분리 
-슈퍼 클래스에서는 개념 정의
	서브 클래스마다 다른 구현이 필요한 메소드는 추상 메소드로 구현
-각 서브 클래스에서 구체적 행위 
..........


자바의 인터페이스 
클래스가 구현 해야 할 메소드들이 선언되는 추상형 
인터페이스 선언 

줓창 메소드만 가지는 클래스 